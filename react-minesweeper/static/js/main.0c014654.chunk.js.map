{"version":3,"sources":["minesweeper.js","components/Field.js","constants/game.constants.js","actions/game.actions.js","components/Game.js","reducers/root.reducer.js","reducers/game.reducer.js","helpers/store.js","App.js","serviceWorker.js","index.js"],"names":["levels","marks","levelConfig","key","level","width","height","mines","generateField","fieldData","Array","from","fill","forEach","row","rowIndex","_","ColIndex","value","revealed","mark","exploded","effectingCells","numberOfCells","i","randomPosition","Math","floor","random","length","filter","v","includes","push","sort","a","b","generateMines","minePosition","minePositionRow","minePositionCol","offset","flagCount","reveal","field","col","neighbours","revealList","operation","shift","colIndex","n","targetRow","targetCol","Field","mineField","onClick","onMark","className","map","rowIdx","colIdx","tileClass","tileContent","e","onContextMenu","preventDefault","gameConstants","gameActions","resetGame","type","mapActions","onLevelClick","connectedGame","connect","state","game","Object","values","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","dispatch","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0c014654.chunk.js","sourcesContent":["export const levels = {\r\n    BEGINNER: 'BEGINNER',\r\n    INTERMEDIATE: 'INTERMEDIATE',\r\n    EXPERT: 'EXPERT'\r\n}\r\n\r\nexport const marks = {\r\n    NOT_MARKED: 0,\r\n    FLAGGED: 1,\r\n    QUESTION: 2,\r\n}\r\n\r\nexport const levelConfig = {\r\n    [levels.BEGINNER]: {key: levels.BEGINNER, level: 'Beginner', width: 9, height: 9,  mines: 10},\r\n    [levels.INTERMEDIATE]: {key: levels.INTERMEDIATE, level: 'Intermediate', width: 16, height: 16,  mines: 40},\r\n    [levels.EXPERT]: {key: levels.EXPERT, level: 'Expert', width: 30, height: 16,  mines: 99},\r\n  }\r\n\r\n  \r\nfunction generateMines (level){\r\n    const mines = []\r\n    const numberOfCells = levelConfig[level].width * levelConfig[level].height\r\n    for (let i=0; i < levelConfig[level].mines; i++) {\r\n        let randomPosition = Math.floor(Math.random() * (numberOfCells - mines.length))\r\n        randomPosition += mines.filter((v) => v <= randomPosition).length\r\n        while(mines.includes(randomPosition)) {\r\n          randomPosition += 1\r\n        }\r\n        mines.push(randomPosition)      \r\n    }\r\n    mines.sort((a,b)=>{return a-b})\r\n    return mines\r\n}\r\n  \r\nexport function generateField(level) {\r\n    const fieldData = Array.from(Array(levelConfig[level].height), () => new Array(levelConfig[level].width).fill({}))\r\n    fieldData.forEach((row, rowIndex)=>{\r\n        row.forEach((_,ColIndex) => {\r\n            fieldData[rowIndex][ColIndex] = {\r\n                value:0, \r\n                revealed: false, \r\n                mark: marks.NOT_MARKED,\r\n                exploded: false,\r\n            }\r\n        })\r\n    })\r\n    const effectingCells = [\r\n        [-1,-1],[-1, 0],[-1,+1],\r\n        [ 0,-1],        [ 0,+1],\r\n        [+1,-1],[+1, 0],[+1,+1],\r\n    ]\r\n    const mines = generateMines(level)\r\n    mines.forEach(minePosition => {\r\n        const minePositionRow = Math.floor(minePosition / levelConfig[level].width)\r\n        const minePositionCol = minePosition % levelConfig[level].width\r\n        fieldData[minePositionRow][minePositionCol].value -= 9\r\n        effectingCells.forEach(offset => {\r\n            if (typeof fieldData[minePositionRow + offset[0]] !== 'undefined' &&\r\n                typeof fieldData[minePositionRow + offset[0]][minePositionCol + offset[1]] !== 'undefined') {\r\n                fieldData[minePositionRow + offset[0]][minePositionCol + offset[1]].value += 1\r\n            }\r\n        })\r\n    })\r\n    return {level: levelConfig[level], flagCount: 0, fieldData: fieldData}\r\n}\r\n\r\nexport function reveal(field, row, col) {\r\n    const neighbours = [\r\n        {row:-1,col:-1},\r\n        {row:-1,col: 0},\r\n        {row:-1,col:+1},\r\n        {row: 0,col:-1},\r\n        {row: 0,col:+1},\r\n        {row:+1,col:-1},\r\n        {row:+1,col: 0},\r\n        {row:+1,col:+1},\r\n    ]\r\n    if (field.fieldData[row][col].mark === marks.FLAGGED) return field\r\n    let revealList = [{row, col}]\r\n    while (revealList.length > 0) {\r\n\r\n        const operation = revealList.shift()\r\n\r\n        field.fieldData[operation.row][operation.col].revealed = true\r\n        if (field.fieldData[operation.row][operation.col].value < 0) {\r\n            field.fieldData[operation.row][operation.col].exploded = true\r\n            field.fieldData.forEach((row,rowIndex) => {\r\n                row.forEach((col,colIndex)=> {\r\n                    if (col.value < 0 && !col.revealed && col.mark !== marks.FLAGGED) \r\n                    {\r\n                        field.fieldData[rowIndex][colIndex].revealed = true\r\n                    }\r\n                    if (col.mark === marks.FLAGGED && col.value >= 0) {\r\n                        field.fieldData[rowIndex][colIndex].revealed = true\r\n                    }\r\n                })\r\n            })\r\n        }\r\n\r\n        if (field.fieldData[operation.row][operation.col].value === 0) {\r\n            neighbours.forEach(n=>{\r\n                const targetRow = operation.row + n.row\r\n                const targetCol = operation.col + n.col\r\n                if (typeof field.fieldData[targetRow] !== 'undefined' &&\r\n                    typeof field.fieldData[targetRow][targetCol] !== 'undefined' &&\r\n                    !field.fieldData[targetRow][targetCol].revealed) {\r\n                        revealList.push({row: targetRow, col: targetCol})\r\n                   }                        \r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    return field\r\n}\r\n\r\nexport function mark(field, row, col) {\r\n    field.fieldData[row][col].mark++\r\n    field.fieldData[row][col].mark %= 3\r\n\r\n    if (field.fieldData[row][col].mark === marks.FLAGGED) field.flagCount++\r\n    if (field.fieldData[row][col].mark === marks.QUESTION) field.flagCount--\r\n\r\n    return field\r\n}\r\n","import React from 'react'\r\nimport {marks} from '../minesweeper'\r\n\r\nexport default function Field({mineField, onClick, onMark}) {\r\n    if (!mineField) {\r\n        return null\r\n    }    \r\n    return (\r\n        <table className=\"field\">\r\n            <tbody>\r\n                {\r\n                    mineField.fieldData.map((row,rowIdx) => {\r\n                        return (<tr key={'r' + rowIdx}>\r\n                            {\r\n                                row.map((col, colIdx) => {\r\n                                    if (col.revealed) {\r\n                                        let tileClass = \"tile revealed\"\r\n                                        let tileContent = col.value\r\n                                        if (col.exploded) tileClass += \" exploded\"\r\n                                        if (col.mark === marks.FLAGGED) tileClass += \" wrong\"\r\n                                        if (col.mark !== marks.FLAGGED && col.value > 0)  tileClass += (\" tile\"+col.value)\r\n                                        if (col.value === 0) tileContent = \"\"\r\n                                        if (col.value < 0) tileContent = \"\\uD83D\\uDCA3\"\r\n                                        if (col.mark === marks.FLAGGED && col.value >= 0) tileContent = \"\\uD83D\\uDCA3\"\r\n                                        return (\r\n                                            <td className={tileClass} key={'cr' + colIdx}>{tileContent}</td>\r\n                                        )\r\n                                    } else {\r\n                                    return (<td className={\"tile unrevealed\"}\r\n                                                key={'cu' + colIdx} \r\n                                                onClick={(e) => {onClick && onClick(rowIdx,colIdx)}}\r\n                                                onContextMenu={(e) => {e.preventDefault(); onMark && onMark(rowIdx,colIdx)}}\r\n                                                >\r\n                                                {col.mark === marks.FLAGGED ? \"\\uD83D\\uDEA9\" : \"\"}\r\n                                                {col.mark === marks.QUESTION ? \"?\" : \"\"}\r\n                                    </td>)\r\n                                    }\r\n                                }) \r\n                            }\r\n                        </tr>)\r\n                    })\r\n                }\r\n            </tbody>\r\n        </table>\r\n\r\n    )\r\n}","export const gameConstants = {\r\n    FIELD: 'FIELD',\r\n    REVEAL: 'REVEAL',\r\n    MARK: 'MARK',\r\n}","import {gameConstants} from '../constants/game.constants'\r\nimport {generateField} from '../minesweeper'\r\n\r\nexport const gameActions = {\r\n    resetGame,\r\n    reveal,\r\n    mark,\r\n}\r\n\r\nfunction resetGame(level) {\r\n    const mineField = generateField(level)\r\n    return {type: gameConstants.FIELD, fieldData: mineField}\r\n}\r\n\r\nfunction reveal(row, col) {\r\n    return {type: gameConstants.REVEAL, row, col}\r\n}\r\n\r\nfunction mark(row, col) {\r\n    return {type: gameConstants.MARK, row, col}\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport Field from './Field'\r\nimport {gameActions} from '../actions/game.actions'\r\nimport {levelConfig} from '../minesweeper'\r\n\r\nfunction Game({mineField, onClick, onMark, onLevelClick}) {  \r\n  return (\r\n    <div>\r\n      <div>Level: {Object.values(levelConfig).map(\r\n          level=>{\r\n            return <button key={level.key} \r\n                           onClick={() => {onLevelClick(level.key)}}>\r\n                             {level.level}\r\n                   </button>\r\n          })\r\n        }</div>\r\n      <div>Remaining: {mineField.level.mines - mineField.flagCount}</div>\r\n      <div>\r\n        <Field mineField={mineField} \r\n              onClick={onClick}\r\n              onMark={onMark}/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapState = (state) => ({\r\n  mineField: state.game.fieldData\r\n})\r\nconst mapActions = {\r\n  onClick: gameActions.reveal,\r\n  onMark: gameActions.mark,\r\n  onLevelClick: gameActions.resetGame,\r\n}\r\n\r\nconst connectedGame = connect(mapState, mapActions)(Game)\r\n\r\nexport {connectedGame as Game}","import {combineReducers} from 'redux'\r\nimport {game} from './game.reducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    game,\r\n})\r\n\r\nexport default rootReducer","import { gameConstants } from '../constants/game.constants'\r\nimport {reveal, mark} from '../minesweeper'\r\n\r\nexport function game(state = {}, action) {\r\n    switch(action.type) {\r\n        case gameConstants.FIELD:\r\n            return {...state, fieldData: action.fieldData}\r\n        case gameConstants.REVEAL:\r\n            return {...state, fieldData: reveal({...state.fieldData}, action.row, action.col)}\r\n        case gameConstants.MARK:\r\n            return {...state, fieldData: mark({...state.fieldData}, action.row, action.col)}\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore, applyMiddleware} from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport rootReducer from '../reducers/root.reducer'\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(\r\n        thunkMiddleware,        \r\n    )\r\n)","import React from 'react';\nimport './App.css';\nimport { Game } from './components/Game'\nimport {store} from './helpers/store'\nimport {gameActions} from './actions/game.actions'\nimport {levels} from './minesweeper'\n\n\nstore.dispatch(gameActions.resetGame(levels.BEGINNER))\n\nfunction App() {  \n  return (\n    <div className=\"App\">\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport {store} from './helpers/store'\nimport {Provider} from 'react-redux'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}